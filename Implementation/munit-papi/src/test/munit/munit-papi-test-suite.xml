<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="munit-papi-test-suite.xml" />
	<munit:test name="munit-papi-test-suite-munit-papiFlowTest-happyPath" doc:id="c445c4e4-7d4b-4203-ace3-2e347e51a839" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - http Request" doc:id="cff9532d-570a-4b4b-bb8b-45ba05b56316" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4ae2ea28-1cf7-4369-b6b1-56e5aaf536b8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/json --- readUrl("classpath://test-inputs/http-response.json")]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="0c9fb55b-d9a8-480a-bb49-6408d849a408" >
				<munit:attributes value='#["queryParams": {"firstName": "Elliot", "lastName": "Gu", "age": 28}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to munit-papiFlow" doc:id="0de52bbd-0c12-4381-a7a1-8c98c2bf7028" name="munit-papiFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="e3586d98-10b2-4433-b3d0-f9912e8bc23d" >
				<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
payload.status must contain("success")]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="munit-papi-test-suite-munit-papiFlowTest-Error" doc:id="4f4f1a4b-6850-45fb-8a0d-22d36603c896" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - http Request" doc:id="cc5cf6b3-b86a-4f16-81ba-d63379a1dc26" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4ae2ea28-1cf7-4369-b6b1-56e5aaf536b8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="206c3450-40a3-400d-bac6-e7b2c5b9375d" >
				<munit:attributes value='#["queryParams": {"firstName": "Elliot", "lastName": "Gu", "age": 28}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to munit-papiFlow" doc:id="a1f90a8e-c86a-4ec0-ba5b-f4fad6a6c76d" name="munit-papiFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="838a5e27-4c7b-49cd-904b-3be1a24369fb" >
				<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
payload.status must contain("error")]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

</mule>
